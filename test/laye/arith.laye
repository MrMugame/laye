// 69
// R %layec --ir %s

// * define exported ccc main() -> int64 {
// + entry:
// +   %0 = alloca int64
// +   store %0, int64 7
// +   %1 = alloca int64
// +   store %1, int64 3
// +   %2 = alloca int64
// +   store %2, int64 19
// +   %3 = load int64, %0
// +   %4 = load int64, %1
// +   %5 = add int64 %3, %4
// +   %6 = load int64, %2
// +   %7 = load int64, %1
// +   %8 = sdiv int64 %6, %7
// +   %9 = mul int64 %5, %8
// +   %10 = load int64, %2
// +   %11 = load int64, %0
// +   %12 = load int64, %1
// +   %13 = add int64 %11, %12
// +   %14 = sub int64 %10, %13
// +   %15 = add int64 %9, %14
// +   return int64 %15
// + }
int main() {
    int a = 7;
    int b = 3;
    int c = 19;

    return (a + b) * (c / b) + (c - (a + b));
}
